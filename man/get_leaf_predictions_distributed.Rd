% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dirichlet_forest.R
\name{get_leaf_predictions_distributed}
\alias{get_leaf_predictions_distributed}
\title{Get Leaf-Based Predictions from Distributed Forest}
\usage{
get_leaf_predictions_distributed(distributed_forest, X_new)
}
\arguments{
\item{distributed_forest}{A distributed forest object with store_samples = TRUE}

\item{X_new}{Numeric matrix of new predictors}
}
\value{
A list with alpha_predictions and mean_predictions from leaf nodes
}
\description{
Extracts pre-computed leaf predictions when store_samples = TRUE.
This is a convenience wrapper for predict_distributed_forest with use_leaf_predictions = TRUE.
}
\examples{
\donttest{
# Setup
n <- 500
p <- 4
X <- matrix(rnorm(n * p), n, p)
Y <- MCMCpack::rdirichlet(n, c(2, 3, 4))

# Fit model with store_samples = TRUE
df <- DirichletForest_distributed(X, Y, B = 50, store_samples = TRUE)

# Create test data
X_test <- matrix(rnorm(10 * p), 10, p)

# Get leaf predictions
leaf_pred <- get_leaf_predictions_distributed(df, X_test)

# Compare with weight-based predictions
weight_pred <- predict_distributed_forest(df, X_test)

print("Difference in mean predictions:")
print(head(abs(leaf_pred$mean_predictions - weight_pred$mean_predictions)))

# Clean up
cleanup_distributed_forest(df)
}
}

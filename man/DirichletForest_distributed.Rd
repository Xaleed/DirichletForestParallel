% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dirichlet_forest.R
\name{DirichletForest_distributed}
\alias{DirichletForest_distributed}
\title{Build Distributed Dirichlet Forest}
\usage{
DirichletForest_distributed(
  X,
  Y,
  B = 100,
  d_max = 10,
  n_min = 5,
  m_try = -1,
  seed = 123,
  method = "mom",
  store_samples = FALSE,
  n_cores = -1
)
}
\arguments{
\item{X}{Numeric matrix of predictors (n x p)}

\item{Y}{Numeric matrix of compositional response variables (n x k),
each row should sum to 1}

\item{B}{Integer, number of trees in the forest (default: 100)}

\item{d_max}{Integer, maximum depth of trees (default: 10)}

\item{n_min}{Integer, minimum samples per leaf node (default: 5)}

\item{m_try}{Integer, number of features to try at each split.
If -1, uses sqrt(p) (default: -1)}

\item{seed}{Integer, random seed for reproducibility (default: 123)}

\item{method}{Character, parameter estimation method: "mle" or "mom" (default: "mom")}

\item{store_samples}{Logical, if TRUE stores sample indices for weight-based predictions,
if FALSE pre-computes predictions for faster inference (default: FALSE)}

\item{n_cores}{Integer, number of cores to use. If -1, uses all available cores minus 1.
If 1, uses sequential processing (default: -1)}
}
\value{
A list containing the distributed forest model
}
\description{
Builds a Dirichlet regression forest using parallel processing when available.
Supports both fork-based (Unix/Mac) and cluster-based (Windows) parallelization.
}
